name: Auto Branch Naming

on:
  workflow_call:
    inputs:
      branch-ref:
        required: true
        type: string
      repository-name:
        required: true
        type: string
    secrets:
      ORG_NPM_INSTALL:
        required: true

jobs:
  branch-naming:
    runs-on: ubuntu-latest
    outputs:
      NEW_BRANCH_NAME: ${{ steps.process_vars.outputs.new_branch_name }}
    if: startsWith(github.ref, 'refs/heads/')
    steps:
      - name: Process variables
        id: process_vars
        run: |
          NEW_BRANCH_REF="${{ inputs.branch-ref }}"
          NEW_BRANCH_NAME="${NEW_BRANCH_REF##refs/heads/}"
          echo "new_branch_name=$NEW_BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Checkout service repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository-name }}
          token: ${{ secrets.ORG_NPM_INSTALL }}
          ref: ${{ steps.process_vars.outputs.new_branch_name }}

      - name: Get the base and HEAD commit
        id: get_base
        run: |
          NEW_BRANCH_REF="${{ inputs.branch-ref }}"
          BASE_COMMIT=$(git rev-parse $NEW_BRANCH_REF)

          git fetch origin main
          HEAD_COMMIT=$(git rev-parse origin/main)

          echo "$BASE_COMMIT"
          echo "git for-each-ref --format='%(refname:short)' --points-at $BASE_COMMIT | grep -E '^SP[0-9]+_hotfix$|^origin/SP[0-9]+_hotfix$'"

          echo "base_commit=$BASE_COMMIT" >> $GITHUB_OUTPUT
          echo "head_commit=$HEAD_COMMIT" >> $GITHUB_OUTPUT

      - name: Commit and regex check
        id: commit_check
        run: |
          HOTFIX_BASE_COMMIT_BRANCHES=$(git for-each-ref --format='%(refname:short)' --points-at ${{ steps.get_base.outputs.base_commit }} | grep -E '^SP[0-9]+_hotfix$|^origin/SP[0-9]+_hotfix$' || true)
          echo '"${{ steps.get_base.outputs.base_commit }}" != "${{ steps.get_base.outputs.head_commit }}" && -n "$HOTFIX_BASE_COMMIT_BRANCHES" && ${{ steps.process_vars.outputs.new_branch_name }} =~ ^SP[0-9]+_hotfix_[a-zA-Z0-9]+$'
          if [[ "${{ steps.get_base.outputs.base_commit }}" = "${{ steps.get_base.outputs.head_commit }}" && ${{ steps.process_vars.outputs.new_branch_name }} =~ ^dev-* ]]; then
            echo "Development branch ${{ steps.process_vars.outputs.new_branch_name }} created"
          elif [[ "${{ steps.get_base.outputs.base_commit }}" = "${{ steps.get_base.outputs.head_commit }}" && ! ${{ steps.process_vars.outputs.new_branch_name }} =~ ^dev-* ]]; then
            echo "Branch ${{ steps.process_vars.outputs.new_branch_name }} does not match the regex ^dev-*$"
            exit 1
          elif [[ "${{ steps.get_base.outputs.base_commit }}" != "${{ steps.get_base.outputs.head_commit }}" && ${{ steps.process_vars.outputs.new_branch_name }} =~ ^SP[0-9]+_hotfix$ ]]; then
            echo "Hotfix ${{ steps.process_vars.outputs.new_branch_name }} branch created"
          elif [[ "${{ steps.get_base.outputs.base_commit }}" != "${{ steps.get_base.outputs.head_commit }}" && -n "$HOTFIX_BASE_COMMIT_BRANCHES" && ${{ steps.process_vars.outputs.new_branch_name }} =~ ^SP[0-9]+_hotfix_[a-zA-Z0-9]+$ ]]; then
            echo "Hotfix ${{ steps.process_vars.outputs.new_branch_name }} development branch created"
          else
            echo "Branch ${{ steps.process_vars.outputs.new_branch_name }} does not match the regex ^SP[0-9]+$"
            exit 1
          fi

  fail-job:
    needs: branch-naming
    if: ${{ always() && needs.branch-naming.result == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout service repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository-name }}
          token: ${{ secrets.ORG_NPM_INSTALL }}
          ref: ${{ needs.branch-naming.outputs.NEW_BRANCH_NAME }}

      - name: Deleting branch
        run: |
          git push origin --delete "${{ needs.branch-naming.outputs.NEW_BRANCH_NAME }}"
          exit 1