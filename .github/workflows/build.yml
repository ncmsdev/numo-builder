name: Azure-docker-build-push
on:
  workflow_call:
    inputs:
      tag-ref:
        required: true
        type: string
      repository-name:
        required: true
        type: string
    secrets:
      ORG_NPM_INSTALL:
        required: true
      ORG_AZURE_CREDENTIALS:
        required: true
      ORG_REGISTRY_USERNAME:
        required: true
      ORG_REGISTRY_PASSWORD:
         required: true
jobs:

  tag-details:
    runs-on: ubuntu-latest
    outputs:
      BRANCH_NAME: ${{ steps.find_branch.outputs.branch }}
      TAG_NAME: ${{ steps.get_tag_info.outputs.tag }}
    steps:
      - name: Checkout service repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository-name }}
          token: ${{ secrets.ORG_NPM_INSTALL }}

      - uses: actions/checkout@v3
      - run: |
          git fetch --all
      
      - name: Get tag's commit information
        id: get_tag_info
        run: |
            GITHUB_REF=${{ inputs.tag-ref }}
            tag_name=${GITHUB_REF#refs/tags/}
            echo "Tag name is $tag_name"
            commit_sha=$(git rev-list -n 1 $tag_name)
            echo "Commit SHA for the tag is $commit_sha"
            echo "commit_sha=$commit_sha" >> $GITHUB_OUTPUT
            echo "tag=$tag_name" >> $GITHUB_OUTPUT

      - name: Find branch for the tag
        id: find_branch
        run: |
          branch=$(git --no-pager log -1 --decorate "${{ steps.get_tag_info.outputs.tag }}" | head -n 1 | awk -F'tag: [^,]*, origin/' '{print $2}' | awk -F'[,)]' '{print $1}')
          echo "Branch is $branch"
          echo "branch=$branch" >> $GITHUB_OUTPUT

  call-checkmycode:
    needs: tag-details
    if: ${{ (startsWith(inputs.tag-ref, 'refs/tags/SP') && needs.tag-details.outputs.BRANCH_NAME == 'main') || 
            (startsWith(inputs.tag-ref, 'refs/tags/HP') && startsWith(needs.tag-details.outputs.BRANCH_NAME, 'SP')) || 
            (startsWith(inputs.tag-ref, 'refs/tags/BR') && startsWith(needs.tag-details.outputs.BRANCH_NAME, 'dev-')) }}
    uses: ncmsdev/numo-builder/.github/workflows/checkmycode.yml@main
    secrets:
      ORG_NPM_INSTALL: ${{ secrets.ORG_NPM_INSTALL }}

  build:
    needs: [call-checkmycode, tag-details]
    if: ${{ (startsWith(inputs.tag-ref, 'refs/tags/SP') && needs.tag-details.outputs.BRANCH_NAME == 'main') || 
            (startsWith(inputs.tag-ref, 'refs/tags/HP') && startsWith(needs.tag-details.outputs.BRANCH_NAME, 'SP')) || 
            (startsWith(inputs.tag-ref, 'refs/tags/BR') && startsWith(needs.tag-details.outputs.BRANCH_NAME, 'dev-')) }}
    runs-on: ubuntu-latest
    steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          with:
            persist-credentials: false
            
        - name: install pcregrep 
          run: |
            sudo apt-get update || true
            sudo apt install pcregrep
            
        - name: Setup Node
          uses: actions/setup-node@v3
          with:
           node-version: '18.x'
           
        - name: Setup latest NPM
          run: npm install -g
        
        - name: Set permissions
          run: |
             git config --global url."https://${{ secrets.ORG_NPM_INSTALL }}@github.com/".insteadOf ssh://git@github.com/
             
        - name: Get dependencies
          run: npm ci --production
          
        - uses: elstudio/action-install-azure-cli@v1
                
        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.ORG_AZURE_CREDENTIALS }}
        
        - name: azure login
          uses: azure/docker-login@v1
          with:
            login-server: numogateway.azurecr.io
            username: ${{ secrets.ORG_REGISTRY_USERNAME }}
            password: ${{ secrets.ORG_REGISTRY_PASSWORD }}
            
            
        - name: update tag,name and build,push
          run: |
              export CONTAINER_NAME=$(cat docker-compose.yml | pcregrep -o1 'container_name: ([^\s]+)')
              export DOCKER_TAG=$(basename ${{ needs.tag-details.outputs.TAG_NAME }})
              find . -name '*function.json' -print0 | xargs -0 sed -i 's/function/anonymous/g' || true
              docker build . -t numogateway.azurecr.io/${CONTAINER_NAME}:$DOCKER_TAG
              docker push numogateway.azurecr.io/${CONTAINER_NAME}:$DOCKER_TAG
              echo "CONTAINER_NAME=$CONTAINER_NAME" >> $GITHUB_ENV
              echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
              
        - name: Checkout release_manifest repo
          uses: actions/checkout@main
          with:
            repository: ncmsdev/release_manifest
            token: ${{ secrets.ORG_NPM_INSTALL }}
            path: release_manifest
          
        - name: Update release-manifest
          run: |  
              cd release_manifest
              git pull
              sed -i "s/__json__/cms_release_manifest.json/g" version.json
              node update_tag.js $CONTAINER_NAME $DOCKER_TAG
              sed -i "s/cms_release_manifest.json/__json__/g" version.json
              
        - name: git commit and push the version.json
          run : |
            cd release_manifest
            git config user.email "developer@numocity.com"
            git config user.name "Numo Dev"
            git add . 
            git commit -m "Automated commit via GitHub Action" || true
            git push

  fail-job:
    needs: [call-checkmycode, build]
    if: ${{ always() && needs.call-checkmycode.result == 'skipped' && needs.build.result == 'skipped' }}
    runs-on: ubuntu-latest
    steps:
      - name: Tag Rules
        run: |
          echo "SP tags -> main branch"
          echo "HP tags -> hotfix branch (SP[0-9]+-hotfix)"
          echo "BR tags -> development branch (dev-*)"
          exit 1
