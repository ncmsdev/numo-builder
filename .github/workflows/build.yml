name: Azure-docker-build-Workflow
on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
    secrets:
      ORG_NPM_INSTALL:
        required: true
      ORG_AZURE_CREDENTIALS:
        required: true
      ORG_REGISTRY_USERNAME:
        required: true
      ORG_REGISTRY_LOGIN_SERVER:
         required: true
      ORG_REGISTRY_PASSWORD:
         required: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
   runs-on: ubuntu-latest
   steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          with:
            persist-credentials: false
            
        - name: extract the container name
          run: |
            sudo apt install pcregrep
          
            
          
        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: '14.x'
          
        - name: Setup latest NPM
          run: npm install -g npm@latest
        
        - name: Set permissions
          run: |
            git config --global url."https://${{ secrets.ORG_NPM_INSTALL }}@github.com/".insteadOf ssh://git@github.com/
        
        - name: Get dependencies
          run: npm ci
          
        - uses: elstudio/action-install-azure-cli@v1
                
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.ORG_AZURE_CREDENTIALS }}
        
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.ORG_REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.ORG_REGISTRY_USERNAME }}
            password: ${{ secrets.ORG_REGISTRY_PASSWORD }}
            
        - name: allow to use env variable
          env:
            container_name: $(cat docker-compose.yml | pcregrep -o1 'container_name:(.*)$')
          run: |
            export DOCKER_TAG=$(basename ${{ inputs.tag }})
            docker build . -t ${{ secrets.ORG_REGISTRY_LOGIN_SERVER }}/$container_name:$DOCKER_TAG
            docker push ${{ secrets.ORG_REGISTRY_LOGIN_SERVER }}/$container_name:$DOCKER_TAG
      
